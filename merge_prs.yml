name: Pull Request Details
on:
  pull_request:
    types: [opened, synchronize]

jobs:
  print_details:
    runs-on: ubuntu-latest
    steps:
      - name: Print PR Details
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Pull Request Details:"
          echo "---------------------"
          echo "Number: ${{ github.event.pull_request.number }}"
          echo "Title: ${{ github.event.pull_request.title }}"
          echo "Description: ${{ github.event.pull_request.body }}"
          echo "Author: ${{ github.event.pull_request.user.login }}"
          echo "URL: ${{ github.event.pull_request.html_url }}"
          echo "this is : ${{ github.event.pull_request.head.ref }}"
          # Add more details as needed
  print-approvals:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Print number of approvals
        run: |
          PR_NUMBER=$(echo "${GITHUB_REF}" | awk 'BEGIN {FS="/"} {print $3}')
          APPROVALS=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/pulls/${PR_NUMBER}/reviews?per_page=100" | jq '[.[] | select(.state=="APPROVED")] | length')
          echo "Number of approvals for PR #${PR_NUMBER}: ${APPROVALS}"
          
  check_conflicts:
    runs-on: ubuntu-latest
    steps:
      - name: Check Conflicts
        id: check_conflicts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER="${{ github.event.pull_request.number }}"
          MERGEABLE_STATE=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER" \
            | jq -r '.mergeable_state')
          echo "this is ${MERGEABLE_STATE}"
          if [ "$MERGEABLE_STATE" == "behind" ] || [ "$MERGEABLE_STATE" == "dirty" ]; then
            echo "Conflicts found in pull request."
          else
            echo "No conflicts found in the pull request."
          fi
          
          COMMIT_STATUS=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/commits/${{ github.event.pull_request.head.sha }}/status" \
            | jq -r '.state')
          echo "the commit status is ${COMMIT_STATUS}"
