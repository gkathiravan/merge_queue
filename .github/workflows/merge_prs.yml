name: Pull Request Details
on:
  pull_request:
    types: [opened, synchronize]

jobs:
  print_details:
    runs-on: ubuntu-latest
    steps:
      - name: Print PR Details
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Pull Request Details:"
          echo "---------------------"
          echo "Number: ${{ github.event.pull_request.number }}"
          echo "Title: ${{ github.event.pull_request.title }}"
          echo "Description: ${{ github.event.pull_request.body }}"
          echo "Author: ${{ github.event.pull_request.user.login }}"
          echo "URL: ${{ github.event.pull_request.html_url }}"
          echo "Branch Name : ${{ github.event.pull_request.head.ref }}"
          echo "---------------------"
          
  count_prs:
    runs-on: ubuntu-latest
    needs: print_details
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Count PRs
      run: |
        pr_count=$(curl -s "https://api.github.com/repos/${{ github.repository }}/pulls" | jq length)
        echo "Number of PRs: $pr_count"
        
  count_and_list_prs:
    runs-on: ubuntu-latest
    needs: count_prs
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: List PRs
      run: |
        PRS=$(curl -s "https://api.github.com/repos/${{ github.repository }}/pulls" | jq -r '.[].head.ref')
        PR_COUNT=$(echo "$PRS" | wc -l)
        echo "Number of PRs: $PR_COUNT"
        echo "PR Names:"
        echo "$PRS"
        
  check-branch:
    runs-on: ubuntu-latest
    
    steps:
      - name: Check Branch Status
        id: check
        run: |
          # Get the latest commit hash of the main branch
          latest_main_commit=$(git ls-remote origin main | awk '{print $1}')
          
          # Get the latest commit hash of the current branch
          current_branch_commit=$(git rev-parse HEAD)
          
          # Check if the current branch is behind the main branch
          if [ "$current_branch_commit" != "$latest_main_commit" ]; then
            echo "Branch is out-of-date."
            exit 1
          else
            echo "Branch is up-to-date."
          fi
          
        shell: bash
        
